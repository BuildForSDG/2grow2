{"version":3,"sources":["logo.svg","widgets/leftMenu.js","components/regions/bureau/presentation.js","components/regions/jobs/presentation.js","components/regions/jobs/jobHistory.js","components/regions/jobs/index.js","components/regions/bureau/employersManagment.js","components/regions/bureau/dashboard.js","components/regions/bureau/candidatesManagment.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","list","width","fullList","menuButton","position","top","left","backgroundColor","common","marginTop","TemporaryDrawer","anchor","classes","React","useState","bottom","right","state","setState","toggleDrawer","open","event","type","key","Fragment","IconButton","color","aria-label","onClick","edge","className","Drawer","onClose","clsx","role","onKeyDown","List","map","text","index","to","ListItem","button","ListItemIcon","ListItemText","primary","Divider","theme","root","maxWidth","flexGrow","marginBottom","fontWeight","palette","background","paper","fontFamily","StyledTableCell","withStyles","head","black","white","body","fontSize","TableCell","StyledTableRow","action","hover","TableRow","table","minWidth","Presentation","data","handleClickOpen","handleClose","rows","TableContainer","component","Paper","Table","TableHead","align","TableBody","row","Id","scope","href","e","category","employerID","status","dateLoaded","dateFilled","expiryDate","totalApplicants","successfulJobSeekerID","appBar","title","marginLeft","spacing","flex","Transition","forwardRef","props","ref","Slide","direction","History","job","jobHistory","history","jobId","Dialog","fullScreen","TransitionComponent","AppBar","Toolbar","Typography","variant","Button","autoFocus","date","secondary","Jobs","jobData","setOpen","setJobID","filter","preventDefault","id","currentTarget","innerHTML","EmployersManagement","Grid","container","CandidatesManagement","App","style","padding","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.15a9c25b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from \"react-router-dom\";\n\n\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n    },\n    menuButton: {\n        position: 'absolute',\n        top: '1em',\n        left: '1em',\n        backgroundColor:'#fff'\n  },\n  common: {\n    position: 'relative',\n    marginTop:'5em'\n  }\n});\n\nexport default function TemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {['Dashboard', 'Information', 'Employers', 'Job Seekers','Jobs'].map((text, index) => (\n          <Link to={'/' + text}>\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n      <Divider />\n      <List className={classes.common}>\n        {['Site Settings', 'Legal', 'Logout'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n\n      {//['left', 'right', 'top', 'bottom'].map((anchor) => (\n        <React.Fragment>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={toggleDrawer('left',true)}\n        edge=\"start\"\n        className ={classes.menuButton}\n        // className={clsx(classes.menuButton, open && classes.hide)}\n      >\n        <MenuIcon />\n      </IconButton>\n                  <Drawer anchor={'left'} open={state['left']} onClose={toggleDrawer('left', false)}>\n            {list('left')}\n          </Drawer>\n        </React.Fragment>\n              //))\n          }\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      flexGrow: 1,\n      marginBottom: '25%',\n      fontWeight: \"bold\",\n      backgroundColor: theme.palette.background.paper,\n      color: '#1D1753',\n      fontFamily: `'Raleway', sans-serif`\n    }\n  }));\n\nconst Presentation = () => {\n    const classes = useStyles();\n\n\n    return (\n        <Grid container spacing={2} className={classes.root}>\n\n\n\n        </Grid>)\n}\n\nexport default Presentation;","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nconst Presentation = ({data,handleClose,handleClickOpen})=> {\n  const classes = useStyles();\n\n  const rows = data;\n\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Job ID</StyledTableCell>\n            <StyledTableCell align=\"right\">Category</StyledTableCell>\n            <StyledTableCell align=\"right\">Employer ID</StyledTableCell>\n            <StyledTableCell align=\"right\">Status</StyledTableCell>\n            <StyledTableCell align=\"right\">Date Loaded</StyledTableCell>\n            <StyledTableCell align=\"right\">Date Filled</StyledTableCell>\n            <StyledTableCell align=\"right\">Expiry Date</StyledTableCell>\n            <StyledTableCell align=\"right\">Total Applicants</StyledTableCell>\n            <StyledTableCell align=\"right\">successful JobSeeker ID</StyledTableCell>\n\n\n\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n\n          {rows.map((row) => (\n            <StyledTableRow key={row.Id}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                <a href=\"#\" onClick={(e)=> handleClickOpen(e)}>{row.Id}</a>\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">{row.category}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.employerID}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.status}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.dateLoaded}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.dateFilled}</StyledTableCell>\n\n              <StyledTableCell align=\"right\">{row.expiryDate}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.totalApplicants}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.successfulJobSeekerID}</StyledTableCell>\n\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default Presentation","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default History = ({handleClose, open,job})=> {\n  const classes = useStyles();\n  const jobHistory = job[0].history\n  const jobId = job[0].Id\n\n\n  return (\n    <div>\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Job ID: {jobId}\n            </Typography>\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\n              {/* save */}\n            </Button>\n          </Toolbar>\n        </AppBar>\n\n        <List>\n          {jobHistory.map((history, index) => (\n            <div key={index}>\n              <ListItem button>\n                <ListItemText primary={history.date} secondary={history.event} />\n              </ListItem>\n              <Divider />\n            </div>\n          ))}\n        </List>\n      </Dialog>\n    </div>\n  );\n}\n","import React, {useState} from 'react';\nimport Presentation from './presentation';\nimport History from './jobHistory';\n\nconst Jobs = () => {\n    const jobData = [\n        {\n            Id: 'xxxx',\n            category: 'domestic worker',\n            employerID: '3400',\n            status: 'Filled',\n            dateLoaded: '14 - May - 2020',\n            dateFilled: '14 - May - 2020',\n            expiryDate: 'n/a',\n            totalApplicants: 20,\n            successfulJobSeekerID:['324E'],\n            history:[{date:'14 - May - 2020',event:'Job loaded'},{date:'14 - May - 2020',event:'job filled'}]\n\n        },\n        {\n            Id: 'yyyyy',\n            category: 'gardener',\n            employerID: '3400',\n            status: 'Pending',\n            dateLoaded: '1 - May - 2020',\n            dateFilled: '',\n            expiryDate: '1 -june - 2020',\n            totalApplicants: 2,\n            successfulJobSeekerID:[],\n            history:[{date:'1 - May - 2020',event:'job loaded'},{date:'1 -june - 2020',event:'job expired'}]\n\n        },\n        {\n            Id: 'aaaaa',\n            category: 'baby keeper',\n            employerID: '3564',\n            status: 'Pending',\n            dateLoaded: '7 - May - 2020',\n            dateFilled: '',\n            expiryDate: '7 - June -2020',\n            totalApplicants: 0,\n            successfulJobSeekerID:[],\n            history:[{date:'7 - May - 2020',event:'job loaded'},{date:'7 -june - 2020',event:'job expired'}]\n\n        }\n\n    ]\n    const [open, setOpen] = useState(false);\n    const [jobId, setJobID] = useState('');\n\n\n    const handleClickOpen = (e) => {\n        e.preventDefault()\n        const  id  = e.currentTarget.innerHTML\n        setOpen(true);\n        setJobID(id)\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n    if (open && jobId) {\n        const job = jobData.filter(job => job.Id === jobId)\n\n        return <History open={open} handleClose={handleClose} job={job}/>\n    }\n    return < Presentation data={jobData} handleClickOpen={handleClickOpen} setJobID={setJobID}/>\n}\n\nexport default Jobs;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      flexGrow: 1,\n      marginBottom: '25%',\n      fontWeight: \"bold\",\n      backgroundColor: theme.palette.background.paper,\n      color: '#1D1753',\n      fontFamily: `'Raleway', sans-serif`\n    }\n  }));\n\nconst EmployersManagement = () => {\n    const classes = useStyles();\n\n\n    return (\n        <Grid container spacing={2} className={classes.root}>\n\n            <Grid>Charts will display here</Grid>\n            <Grid>Jobs will display here</Grid>\n\n\n        </Grid>)\n}\n\nexport default EmployersManagement;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      flexGrow: 1,\n      marginBottom: '25%',\n      fontWeight: \"bold\",\n      backgroundColor: theme.palette.background.paper,\n      color: '#1D1753',\n      fontFamily: `'Raleway', sans-serif`\n    }\n  }));\n\nconst Presentation = () => {\n    const classes = useStyles();\n\n\n    return (\n        <Grid container spacing={2} className={classes.root}>\n\n            <Grid>Charts will display here</Grid>\n            <Grid>Jobs will display here</Grid>\n\n\n        </Grid>)\n}\n\nexport default Presentation;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      flexGrow: 1,\n      marginBottom: '25%',\n      fontWeight: \"bold\",\n      backgroundColor: theme.palette.background.paper,\n      color: '#1D1753',\n      fontFamily: `'Raleway', sans-serif`\n    }\n  }));\n\nconst CandidatesManagement = () => {\n    const classes = useStyles();\n\n\n    return (\n        <Grid container spacing={2} className={classes.root}>\n\n            <Grid>Charts will display here</Grid>\n            <Grid>Jobs will display here</Grid>\n\n\n        </Grid>)\n}\n\nexport default CandidatesManagement;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport LeftMenu from './widgets/leftMenu'\nimport Bureau from './components/regions/bureau'\nimport Jobs from './components/regions/jobs'\nimport Dashboard from './components/regions/bureau/dashboard'\nimport EmployersManagement from './components/regions/bureau/employersManagment'\nimport JobSeekersManagement from './components/regions/bureau/candidatesManagment'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n\n      <LeftMenu />\n      <div style={{marginTop:'3%',padding:'1%'}}>\n        <Switch>\n          <Route path=\"/dashboard\">\n          {/* <Dashboard /> */}\n          <div style={{marginTop : '20%',marginLeft : \"40%\"}}>Dashboard under construction...</div>\n\n          </Route>\n          <Route path=\"/information\">\n            <div style={{marginTop : '20%',marginLeft : \"40%\"}}>Not sure yet what to display here</div>\n          </Route>\n          <Route path=\"/jobs\">\n            <Jobs />\n          </Route>\n\n          <Route path=\"/employers\">\n            <EmployersManagement />\n          </Route>\n          <Route path=\"/employers\">\n            <JobSeekersManagement />\n          </Route>\n\n          <Route path=\"/\">\n            <div style={{marginTop : '20%',marginLeft : \"40%\"}}> Login page under construction...</div>\n          </Route>\n\n        </Switch>\n        </div>\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}